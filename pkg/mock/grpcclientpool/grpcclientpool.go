// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/grpcclientpool/grpcclientpool.go

// Package mock_grpcclientpool is a generated GoMock package.
package mock_grpcclientpool

import (
	reflect "reflect"

	grpcclientpool "github.com/achwanyusuf/carrent-lib/pkg/grpcclientpool"
	gomock "github.com/golang/mock/gomock"
)

// MockCPoolInterface is a mock of CPoolInterface interface.
type MockCPoolInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCPoolInterfaceMockRecorder
}

// MockCPoolInterfaceMockRecorder is the mock recorder for MockCPoolInterface.
type MockCPoolInterfaceMockRecorder struct {
	mock *MockCPoolInterface
}

// NewMockCPoolInterface creates a new mock instance.
func NewMockCPoolInterface(ctrl *gomock.Controller) *MockCPoolInterface {
	mock := &MockCPoolInterface{ctrl: ctrl}
	mock.recorder = &MockCPoolInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCPoolInterface) EXPECT() *MockCPoolInterfaceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockCPoolInterface) Get() (*grpcclientpool.Connection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(*grpcclientpool.Connection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockCPoolInterfaceMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCPoolInterface)(nil).Get))
}

// Release mocks base method.
func (m *MockCPoolInterface) Release() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Release")
}

// Release indicates an expected call of Release.
func (mr *MockCPoolInterfaceMockRecorder) Release() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Release", reflect.TypeOf((*MockCPoolInterface)(nil).Release))
}
